{"ast":null,"code":"import axios from 'axios'; // api link\n\nconst apiUrl = 'http://taco-randomizer.herokuapp.com/random/'; // action types\n\nexport const FETCH_RECIPE = 'FETCH_RECIPE';\nexport const FETCH_RECIPE_SUCCESS = 'FETCH_RECIPE_SUCCESS';\nexport const FETCH_RECIPE_ERROR = 'FETCH_RECIPE_ERROR'; // action creators\n\nexport const fetchRecipe = () => {\n  return dispatch => {\n    dispatch({\n      type: FETCH_RECIPE\n    });\n    axios.get(apiUrl).then(res => {\n      dispatch({\n        type: FETCH_RECIPE_SUCCESS,\n        payload: res.data\n      }); // too fix\n    }).catch(err => {\n      debugger;\n      dispatch({\n        type: FETCH_RECIPE_ERROR,\n        payload: {\n          message: \"No tacos for you, friend\"\n        }\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/davidgold/Documents/lambdaSchool/projects/unit 3/week-2/React-Redux-App/app/src/actions/index.js"],"names":["axios","apiUrl","FETCH_RECIPE","FETCH_RECIPE_SUCCESS","FETCH_RECIPE_ERROR","fetchRecipe","dispatch","type","get","then","res","payload","data","catch","err","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,MAAM,GAAG,8CAAf,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B,C,CAEP;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAChC,SAAOC,QAAQ,IAAI;AAChBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACIF,IAAAA,KAAK,CACJQ,GADD,CACKP,MADL,EAECQ,IAFD,CAEMC,GAAG,IAAI;AACTJ,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEJ,oBAAR;AAA8BQ,QAAAA,OAAO,EAAED,GAAG,CAACE;AAA3C,OAAD,CAAR,CADS,CACoD;AAChE,KAJD,EAKCC,KALD,CAKOC,GAAG,IAAI;AACV;AACAR,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEH,kBAAR;AAA4BO,QAAAA,OAAO,EAAE;AAAEI,UAAAA,OAAO,EAAE;AAAX;AAArC,OAAD,CAAR;AACH,KARD;AASP,GAXA;AAYC,CAbK","sourcesContent":["import axios from 'axios';\n\n// api link\nconst apiUrl = 'http://taco-randomizer.herokuapp.com/random/';\n\n// action types\nexport const FETCH_RECIPE = 'FETCH_RECIPE';\nexport const FETCH_RECIPE_SUCCESS = 'FETCH_RECIPE_SUCCESS';\nexport const FETCH_RECIPE_ERROR = 'FETCH_RECIPE_ERROR';\n\n// action creators\nexport const fetchRecipe = () => {\n return dispatch => {\n    dispatch({ type: FETCH_RECIPE });\n        axios \n        .get(apiUrl)\n        .then(res => {\n            dispatch({ type: FETCH_RECIPE_SUCCESS, payload: res.data }); // too fix\n        })\n        .catch(err => {\n            debugger;\n            dispatch({ type: FETCH_RECIPE_ERROR, payload: { message: \"No tacos for you, friend\"} });\n        })\n}\n }\n "]},"metadata":{},"sourceType":"module"}