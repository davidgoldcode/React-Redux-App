{"ast":null,"code":"import axios from 'axios'; // api link\n\nconst apiUrl = 'http://taco-randomizer.herokuapp.com/random/'; // action types\n\nexport const FETCH_RECIPE = 'FETCH_RECIPE';\nexport const FETCH_RECIPE_SUCCESS = 'FETCH_RECIPE_SUCCESS';\nexport const FETCH_RECIPE_ERROR = 'FETCH_RECIPE_ERROR'; // action creators\n\nexport const fetchRecipe = () => dispatch => {\n  dispatch({\n    type: FETCH_RECIPE\n  });\n  axios.get(apiUrl).then(res => {\n    debugger;\n    dispatch({\n      type: FETCH_RECIPE_SUCCESS,\n      payload: res.data.all\n    }); // too fix\n  }).catch(err => {\n    debugger;\n    dispatch({\n      type: FETCH_RECIPE_ERROR,\n      payload: {\n        message: \"No tacos for you, friend\"\n      }\n    });\n  });\n};","map":{"version":3,"sources":["/Users/davidgold/Documents/lambdaSchool/projects/unit 3/week-2/React-Redux-App/app/src/actions/index.js"],"names":["axios","apiUrl","FETCH_RECIPE","FETCH_RECIPE_SUCCESS","FETCH_RECIPE_ERROR","fetchRecipe","dispatch","type","get","then","res","payload","data","all","catch","err","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,MAAM,GAAG,8CAAf,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B,C,CAEP;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAOC,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACAF,EAAAA,KAAK,CACAQ,GADL,CACSP,MADT,EAEKQ,IAFL,CAEUC,GAAG,IAAI;AACT;AACAJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,oBAAR;AAA8BQ,MAAAA,OAAO,EAAED,GAAG,CAACE,IAAJ,CAASC;AAAhD,KAAD,CAAR,CAFS,CAEwD;AACpE,GALL,EAMKC,KANL,CAMWC,GAAG,IAAI;AACV;AACAT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,kBAAR;AAA4BO,MAAAA,OAAO,EAAE;AAAEK,QAAAA,OAAO,EAAE;AAAX;AAArC,KAAD,CAAR;AACH,GATL;AAUC,CAZE","sourcesContent":["import axios from 'axios';\n\n// api link\nconst apiUrl = 'http://taco-randomizer.herokuapp.com/random/';\n\n// action types\nexport const FETCH_RECIPE = 'FETCH_RECIPE';\nexport const FETCH_RECIPE_SUCCESS = 'FETCH_RECIPE_SUCCESS';\nexport const FETCH_RECIPE_ERROR = 'FETCH_RECIPE_ERROR';\n\n// action creators\nexport const fetchRecipe = () => (dispatch) => {\n    dispatch({ type: FETCH_RECIPE });\n    axios \n        .get(apiUrl)\n        .then(res => {\n            debugger;\n            dispatch({ type: FETCH_RECIPE_SUCCESS, payload: res.data.all }); // too fix\n        })\n        .catch(err => {\n            debugger;\n            dispatch({ type: FETCH_RECIPE_ERROR, payload: { message: \"No tacos for you, friend\"} });\n        })\n    }"]},"metadata":{},"sourceType":"module"}